Контрольные вопросы
#1.В чем заключается алгоритм частотного анализа?
Это старейший и фундаментальный метод криптоанализа, применяемый в первую очередь для взлома моноалфавитных шифров подстановки (где одна буква открытого текста всегда заменяется на одну и ту же букву/символ шифротекста).
1. Суть:
   1. В любом естественном языке (английский, русский и т.д.) буквы и сочетания букв встречаются с определенной, предсказуемой частотой. Например, в английском:
      1. E - самая частая буква (~12.7%)
      2. Затем T, A, O, I, N, S, H, R, D, L, U (в порядке убывания частоты)
      3. Q, X, Z - самые редкие.
      4. Биграммы (TH, HE, IN, ER, AN, RE и т.д.) и триграммы (THE, ING, AND, ION и т.д.) также имеют характерные частоты.
   2. Шифр подстановки меняет буквы, но НЕ меняет частотные закономерности в тексте. Если E заменена на X, то X в шифротексте будет встречаться примерно в 12.7% случаев.
2. Алгоритм (шаги):
   1. Сбор данных: Получить достаточно длинный шифротекст (чем длиннее, тем точнее анализ).
   2. Подсчет частот:
      1. Подсчитать, сколько раз встречается каждый символ в шифротексте.
      2. (Опционально) Подсчитать частоты биграмм (пар символов) и триграмм (троек символов).
   3. Сортировка: Отсортировать символы по убыванию частоты.
   4. Сопоставление с языком:
      1. Сравнить полученный частотный профиль шифротекста с известным частотным профилем предполагаемого языка открытого текста.
      2. Предположить, что самый частый символ в шифротексте соответствует самой частой букве языка (например, E для английского).
      3. Следующий по частоте символ предположительно соответствует следующей по частоте букве (например, T).
      4. Аналогично анализировать редкие символы (предполагая соответствие Q, X, Z).
      5. Анализировать частоты биграмм и триграмм для проверки гипотез и уточнения (например, если предполагаемая T и H часто стоят рядом, это подтверждает гипотезу, так как TH - очень частая биграмма).
   5. Формирование гипотезы: На основе сопоставления построить гипотетическую таблицу подстановки (какой символ шифротекста какой букве открытого текста соответствует).
   6. Проверка гипотезы: Подставить найденные соответствия в часть шифротекста. Если получается осмысленный текст (или узнаваемые слова/окончания), гипотеза верна. Если нет – вернуться к шагу 4, скорректировать гипотезу (например, поменять предполагаемое соответствие для одного из символов) и проверить снова.
   7. Расшифровка: Применив найденную таблицу подстановки ко всему шифротексту, получить открытый текст.
3. Защита от частотного анализа:
   1. Полиалфавитные шифры: Шифры, где одна и та же буква открытого текста шифруется в разные символы в разных позициях (например, шифр Виженера). Они "размазывают" частотные характеристики.
   2. Омофоны: Сопоставление одной букве открытого текста нескольких возможных символов шифротекста, выбираемых случайно. Это снижает четкость частотного профиля.
   3. Шифры перестановки: Меняют порядок букв, сохраняя их состав (частотный профиль букв остается неизменным, но разрушаются частотные профили биграмм, триграмм и слов).
   4. Сжатие данных перед шифрованием: Уменьшает избыточность и частотные закономерности.


#2. Какие есть другие распространенные атаки на криптографические алгоритмы?
* Атака "Brute-force" (Полный перебор): Систематическая проверка всех возможных ключей до нахождения правильного. Эффективность напрямую зависит от длины ключа. Защита - использование достаточно длинных ключей (128+ бит для симметричных шифров).
* Атака по известному открытому тексту (Known-Plaintext Attack - KPA): Атакующий имеет доступ к парам (открытый текст, соответствующий шифротекст). Цель - найти ключ или дешифровать другие сообщения. Многие исторические шифры уязвимы.
* Атака по выбранному открытому тексту (Chosen-Plaintext Attack - CPA): Атакующий может получить шифротекст для ЛЮБОГО выбранного им открытого текста. Цель - найти ключ. Очень мощная атака, современные шифры должны быть устойчивы к ней.
* Атака по выбранному шифротексту (Chosen-Ciphertext Attack - CCA): Атакующий может получить расшифровку ЛЮБОГО выбранного им шифротекста (кроме целевого, который он хочет взломать). Цель - найти ключ или дешифровать целевой шифротекст. Наиболее мощная атака на алгоритм. Современные шифры (особенно асимметричные и режимы блочных шифров с аутентификацией) проектируются с учетом устойчивости к CCA.
* Атака "Meet-in-the-Middle" (Встреча посередине): Применяется в основном против двойного или тройного шифрования (например, 2DES, 3DES). Позволяет найти ключ быстрее, чем полный перебор всех комбинаций, но медленнее, чем перебор одного ключа. Защита - использование тройного шифрования с тремя независимыми ключами (3TDEA) или переход на AES.
* Дифференциальный криптоанализ (Differential Cryptanalysis): Анализирует, как различия (дельта) в парах открытых текстов влияют на различия в соответствующих парах шифротекстов. Позволяет находить статистические закономерности и восстанавливать ключ. Современные блочные шифры (AES) проектируются с высокой устойчивостью к этой атаке.
* Линейный криптоанализ (Linear Cryptanalysis): Ищет линейные статистические соотношения между битами открытого текста, шифротекста и ключа. Успешная атака позволяет восстановить ключ. AES также устойчив к этой атаке.
* Атаки на реализацию (Side-Channel Attacks): Нацелены не на математическую слабость алгоритма, а на его физическую реализацию (процессор, смарт-карта):
   * Атака по времени (Timing Attack): Измерение времени выполнения операций (дешифрования, подписи) для получения информации о ключе.
   * Анализ мощности (Power Analysis): Измерение потребляемой устройством мощности во время криптоопераций (SIMPLE - SPA, DIFFERENTIAL - DPA) для извлечения ключа.
   * Анализ электромагнитного излучения (Electromagnetic Analysis - EMA): Анализ ЭМ-поля, излучаемого устройством.
   * Атаки по ошибкам (Fault Attacks): Намеренное создание сбоев в работе устройства (перегрев, глитчи напряжения, облучение) во время криптоопераций для получения некорректных результатов, несущих информацию о ключе.
* Атака "Человек посередине" (Man-in-the-Middle - MitM): Применяется к протоколам обмена ключами. Атакующий тайно перехватывает и ретранслирует сообщения между двумя сторонами, выдавая себя за каждую из них. Цель - перехватить или подменить ключ. Защита - аутентификация сторон (с помощью цифровых подписей, сертификатов).
* Атака на уязвимости в протоколах или режимах работы: Например, атаки на ECB-режим блочных шифров (сохраняет паттерны открытого текста), атаки на небезопасные хэш-функции (коллизии), атаки на уязвимости в протоколах TLS/SSL (POODLE, BEAST, CRIME и др.).


#3. Какие симметричные шифры используются в настоящее время и считаются надежными?
Симметричные шифры используют один и тот же ключ для шифрования и дешифрования. Надежность современных шифров основана на их математической стойкости к известным атакам и достаточной длине ключа.
* Блочные шифры (обрабатывают данные блоками фиксированного размера):
   * AES (Advanced Encryption Standard) - Rijndael: Самый распространенный и рекомендуемый стандарт. Размер блока: 128 бит. Размеры ключа: 128, 192 или 256 бит. Широко проанализирован, очень эффективен как в ПО, так и в железе. Считается крайне надежным при использовании рекомендованных длин ключей (128 бит для большинства применений, 256 бит для повышенной безопасности) и безопасных режимов работы (CBC, CTR, GCM, XTS - избегать ECB!). Используется повсеместно (TLS, VPN, шифрование дисков, файлов и т.д.).
   * ChaCha20 (часто в связке с Poly1305): Набирающий популярность потоковый шифр. Разработан Дэниелом Бернштейном. Особенно эффективен в программных реализациях на системах без аппаратного ускорения AES (мобильные устройства, старые ПК). Часто используется как альтернатива AES в TLS (например, в Chrome, Android), в OpenSSH, OpenVPN. ChaCha20 обеспечивает конфиденциальность, Poly1305 - аутентификацию. Считается надежным и быстрым.
   * Camellia: Блочный шифр, разработанный Mitsubishi и NTT. Размер блока 128 бит, ключи 128, 192, 256 бит. По безопасности и скорости сравним с AES. Широко используется в Японии и некоторых международных стандартах (TLS, IPsec). Надежен.
   * Аria: Корейский стандарт шифрования. Размер блока 128 бит, ключи 128, 192, 256 бит. Используется в Южной Корее. Надежен.
   * (Устаревшие, но иногда встречающиеся):
      * 3DES (Triple DES): Тройное применение DES с 2 или 3 ключами. Размер блока 64 бита (считается малым по современным меркам). Ключи эффективно 112 или 168 бит. Медленный, размер блока мал. Рекомендуется заменять на AES. Используется в устаревших системах.
      * Blowfish / Twofish: Шифры Брюса Шнайера. Twofish был финалистом конкурса AES. Надежны, но менее распространены и оптимизированы, чем AES.
* Потоковые шифры (шифруют поток данных побитово/побайтово, обычно с использованием ключевого потока):
   * ChaCha20: (Упомянут выше как блочный в режиме потока). Основной современный потоковый шифр. Надежен и эффективен.
   * AES в режимах потокового шифрования: Режимы CTR (Counter) и OFB (Output Feedback) превращают блочный шифр AES в потоковый шифр. Надежность зависит от надежности самого AES и правильности реализации режима.
   * (Устаревшие/Ненадежные): RC4 - крайне уязвим, НИКОГДА не используйте!
Ключевые моменты о надежности:
1. Длина ключа: Для симметричных шифров 128 бит считается безопасной на десятилетия вперед против атак полным перебором даже с учетом квантовых компьютеров (до появления реальных мощных квантовых компьютеров). 256 бит обеспечивают огромный запас прочности.
2. Режим работы: Для блочных шифров критически важен выбор режима работы. Небезопасные режимы (ECB) сводят на нет стойкость самого алгоритма. Рекомендуются аутентифицированные режимы шифрования (AEAD) как AES-GCM или ChaCha20-Poly1305, которые обеспечивают одновременно и конфиденциальность, и целостность/аутентичность данных.
3. Качество реализации: Уязвимости в коде или аппаратной реализации могут скомпрометировать даже самый стойкий алгоритм (см. атаки на реализацию).
4. Стойкость к криптоанализу: Алгоритмы должны выдерживать все известные математические атаки (дифференциальный, линейный и т.д.). AES, ChaCha20, Camellia, Aria соответствуют этому требованию.
Итог: AES и ChaCha20-Poly1305 являются основными и наиболее рекомендуемыми надежными симметричными шифрами на сегодняшний день при их корректном использовании (достаточная длина ключа, безопасный режим работы, качественная реализация).